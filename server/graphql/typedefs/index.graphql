type Query {
    productTypes: [ProductType]

    productType(id: String!): ProductType!

    products: [Product]

    product(id: String!): Product!

    purchases: [Purchase]
    
    purchase(id: String!): Purchase!

    varieties: [Variety]

    variety(id: String): Variety!

    varietiesByProdID(prodID: String!): [Variety]

    standingOrders: [StandingOrder]

    standingOrder(id: String!): StandingOrder!

    shippingMethods: [ShippingMethod]

    shippingMethod(id: String!): ShippingMethod!

    vendors: [Vendor]

    vendor(id: String!): Vendor!

    store(id: String!): Store!

    stores: [Store]

    event(id: String!): Event!

    events: [Event]
}

type Mutation {
    addProductType(productType: AddProductTypeInput): ProductType!

    addProduct(product: AddProductInput!): Product!

    addVariety(variety: AddVarietyInput): Variety!

    addPurchase(purchase: AddPurchaseInput!): Purchase!

    deletePurchase(purchID: String!, standingOrderID: String!): Purchase!

    addSOItem(standingOrderId: String!, item: StandingOrderItemInput!): StandingOrder!

    deleteSOItem(standingOrderId: String!, itemId: String!): StandingOrder

    addStandingOrder(standingOrder: AddStandingOrderInput!): StandingOrder!

    addShippingMethod(shippingMethod: AddShippingMethodInput!): ShippingMethod!

    addVendor(vendor: AddVendorInput!): Vendor!

    addStore(store: AddStoreInput!): Store!

    addEvent(event: AddEventInput): Event!

    addEventItem(eventID: String!, item: EventItemInput): Event!

    deleteEventItem(eventID: String!, itemID: String!): Event
}